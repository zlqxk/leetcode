/**
  给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的 中位数 。

  算法的时间复杂度应该为 O(log (m+n)) 。


  示例 1：

  输入：nums1 = [1,3], nums2 = [2]
  输出：2.00000
  解释：合并数组 = [1,2,3] ，中位数 2
  示例 2：

  输入：nums1 = [1,2], nums2 = [3,4]
  输出：2.50000
  解释：合并数组 = [1,2,3,4] ，中位数 (2 + 3) / 2 = 2.5

  来源：力扣（LeetCode）
  链接：https://leetcode.cn/problems/median-of-two-sorted-arrays
  著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */

/**
 * 本题一个简单的思路是：因为两个数组都是有序的，所以中位数的位置一定是固定的，即：k = (m + n) / 2，所以一个简单的方式就是从小到大的遍历两个数组，知道找到第 k 个数即可
 * 根据上述思路我们发现，上述思路其实也是一个排除的过程，一个一个的排除不是中位数的数，由于数组是有序的，所以我们可以通过二分法一批一批的排除
 * 例如我们找到中位数的下标为k，我们找到 s = Math.floor(k/2)，
 * @param {*} nums1
 * @param {*} nums2
 */
var findMedianSortedArrays = function (nums1, nums2) {};
